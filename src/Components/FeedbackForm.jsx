import React, { useState } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import './FeedbackForm.css';

const FeedbackForm = () => {
  const location = useLocation();
  const navigate = useNavigate();
  const { subject, teacher } = location.state || {};

  const [feedback, setFeedback] = useState({
    knowledge: 1,
    communication: 1,
    commitment: 1,
    interest: 1,
    integration: 1,
    accessibility: 1,
    initiative: 1,
    regularity: 1,
    completion: 1,
    fairness: 1,
    overall: 1,
    comments: ''
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    if (name !== 'comments') {
      const numericValue = Math.max(1, Math.min(5, Number(value)));
      setFeedback({ ...feedback, [name]: numericValue });
    } else {
      setFeedback({ ...feedback, [name]: value });
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    const validFeedback = Object.keys(feedback).every((key) => {
      if (key !== 'comments') {
        return feedback[key] >= 1 && feedback[key] <= 5;
      }
      return true;
    });

    if (validFeedback) {
      try {
        // Replace with your API endpoint
        const response = await fetch('https://jsonplaceholder.typicode.com/posts', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            subject,
            teacher,
            feedback,
          }),
        });

        if (!response.ok) {
          throw new Error('Network response was not ok');
        }

        // Navigate to ThankYouPage
        navigate('/thank-you');
      } catch (error) {
        console.error('Error submitting feedback:', error);
        alert('Failed to submit feedback. Please try again.');
      }
    } else {
      alert('Please ensure all ratings are between 1 and 5.');
    }
  };

  return (
    <div className="feedback-container">
      <h2>Feedback for {teacher}</h2>
      <form onSubmit={handleSubmit}>
        <div className="form-group">
          <label>Knowledge base of the teacher:</label>
          <input
            type="number"
            name="knowledge"
            min="1"
            max="5"
            value={feedback.knowledge}
            onChange={handleChange}
          />
        </div>
        <div className="form-group">
          <label>Communication skills:</label>
          <input
            type="number"
            name="communication"
            min="1"
            max="5"
            value={feedback.communication}
            onChange={handleChange}
          />
        </div>
        <div className="form-group">
          <label>Commitment of the teacher:</label>
          <input
            type="number"
            name="commitment"
            min="1"
            max="5"
            value={feedback.commitment}
            onChange={handleChange}
          />
        </div>
        <div className="form-group">
          <label>Interest generated by the teacher:</label>
          <input
            type="number"
            name="interest"
            min="1"
            max="5"
            value={feedback.interest}
            onChange={handleChange}
          />
        </div>
        <div className="form-group">
          <label>Integration with broader perspective:</label>
          <input
            type="number"
            name="integration"
            min="1"
            max="5"
            value={feedback.integration}
            onChange={handleChange}
          />
        </div>
        <div className="form-group">
          <label>Accessibility and availability:</label>
          <input
            type="number"
            name="accessibility"
            min="1"
            max="5"
            value={feedback.accessibility}
            onChange={handleChange}
          />
        </div>
        <div className="form-group">
          <label>Initiative in assignments and projects:</label>
          <input
            type="number"
            name="initiative"
            min="1"
            max="5"
            value={feedback.initiative}
            onChange={handleChange}
          />
        </div>
        <div className="form-group">
          <label>Regularity in taking classes:</label>
          <input
            type="number"
            name="regularity"
            min="1"
            max="5"
            value={feedback.regularity}
            onChange={handleChange}
          />
        </div>
        <div className="form-group">
          <label>Completion of the course:</label>
          <input
            type="number"
            name="completion"
            min="1"
            max="5"
            value={feedback.completion}
            onChange={handleChange}
          />
        </div>
        <div className="form-group">
          <label>Fairness in evaluation:</label>
          <input
            type="number"
            name="fairness"
            min="1"
            max="5"
            value={feedback.fairness}
            onChange={handleChange}
          />
        </div>
        <div className="form-group">
          <label>Overall rating:</label>
          <input
            type="number"
            name="overall"
            min="1"
            max="5"
            value={feedback.overall}
            onChange={handleChange}
          />
        </div>
        <div className="form-group">
          <label>Optional comments:</label>
          <textarea
            name="comments"
            value={feedback.comments}
            onChange={handleChange}
          ></textarea>
        </div>
        <button onClick={handleSubmit} type="submit">Submit Feedback</button>
      </form>
    </div>
  );
};

export default FeedbackForm;
